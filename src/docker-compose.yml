version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}    
    mongodb-data: {}

networks:
  front-tier:
  back-tier:
  
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    environment:
      -  'MONGODB_USER=user' 
      -  'MONGODB_PASS=password!'
    volumes:
      - 'mongodb-data:/data/db'
    ports:
      - '27017:27017'
    networks:
      - back-tier
    command: mongod

  rabbitmq:
    image: 'rabbitmq:3-management'
    container_name: rabbitmq
    hostname: 'rabbitmq'
    environment:
      RABBITMQ_ERLANG_COOKIE: 'SWQOKODSQALRPCLNMEQG'
      RABBITMQ_DEFAULT_USER: 'guest'
      RABBITMQ_DEFAULT_PASS: 'guest'
      RABBITMQ_DEFAULT_VHOST: '/'
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - back-tier
    labels:
      NAME: 'rabbitmq'

  prometheus:
    image: prom/prometheus:v2.1.0
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=./prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
#      - pushgateway:pushgateway
    depends_on:
      - cadvisor
#      - pushgateway
    networks:
      - back-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    user: "472"
    container_name: grafana
    hostname: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
      - 4317:4317
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always


  simplic_auth:
    image: 'simplic.oxs.auth:local'
    container_name: simplic_auth
    hostname: 'simplic_auth'
    ports:
      - '8086:80'
    labels:
      NAME: 'simplic_auth'
    networks:
      - back-tier
      - front-tier
    depends_on:
       - mongodb
       - rabbitmq
       - grafana
       - prometheus
    environment:
       - ASPNETCORE_ENVIRONMENT=Development
